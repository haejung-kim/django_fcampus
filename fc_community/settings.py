"""
Django settings for fc_community project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# 이안에서 경로는 BASE_DIR / 'subdir' 이렇게 표현함
# Path(__file__) : 현재파일 위치
# Path(__file__).parent : 현재파일의 폴더위치
# Path(__file__).parent : 현재파일의 폴더의 상위폴더

# 이경로는 Projcect폴더 FC_COMMUNITY를 의미함

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--_dekytg7!3s=(x-r#*)+$j5-ocb8)1a!e@#7&w8lkhcbs(1j0'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False

# ALLOWED_HOSTS = [](최초)
# DEBUG를 False하면 반드시 안에 내용이 필요함
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'board',
    'fcuser',
    'tag',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fc_community.urls'  # 폴더(fc_commnuity)의 urls.py가 기본 urls.py

TEMPLATES = [
    {
        # Template 기본엔진(jinja 아님)
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # project의 template폴더 : 검색(!순위:개별 APP의 temp폴더, 2순위: project template폴더)
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fc_community.wsgi.application'  # 폴더의 wsgi.py파일의 applcation 변수


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',   # ENGINE:sqlite정의
        'NAME': BASE_DIR / 'db.sqlite3',          # sqlite파일이라서 위치 정의
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
# LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'
# TIME_ZONE = 'UTC'/

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# 실제 web에 올릴때는 비활성화 (테스트 환경에서만 사용)
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static')
# ]

# 새로운 방법
# STATICFILES_DIRS = [
#     BASE_DIR / "static"
# ]


# 개념 os.path.join('A','subdir','sub-subdir)
# 실제 웹에 올릴때활성화
# python manage.py collectstatic ->  BASE_DIR/static폴더로 모든 파일이 들어감
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
